// Generated by IcedCoffeeScript 108.0.13

/*
* File: station-overview-directive
* User: David
* Date: 2019/12/23
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var StationOverviewDirective, exports;
  StationOverviewDirective = (function(_super) {
    __extends(StationOverviewDirective, _super);

    function StationOverviewDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.addZero = __bind(this.addZero, this);
      this.getDevices = __bind(this.getDevices, this);
      this.ergodicSite = __bind(this.ergodicSite, this);
      this.show = __bind(this.show, this);
      this.id = "station-overview";
      StationOverviewDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    StationOverviewDirective.prototype.setScope = function() {};

    StationOverviewDirective.prototype.setCSS = function() {
      return css;
    };

    StationOverviewDirective.prototype.setTemplate = function() {
      return view;
    };

    StationOverviewDirective.prototype.show = function(scope, element, attrs) {
      scope.project.loadStations(null, (function(_this) {
        return function(err, stations) {
          scope.stations = _.filter(stations, function(station) {
            return station.model.parent;
          });
          return _this.ergodicSite(scope);
        };
      })(this));
      return scope.clickStation = (function(_this) {
        return function(station) {
          return window.location.hash = "#/station-info/" + scope.project.model.user + "/" + scope.project.model.project + "/" + station.model.station;
        };
      })(this);
    };

    StationOverviewDirective.prototype.ergodicSite = function(scope) {
      var site, _i, _len, _ref, _results;
      _ref = scope.stations;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        site = _ref[_i];
        site.model.allDeviceNumber = '00';
        _results.push(this.getDevices(scope, site));
      }
      return _results;
    };

    StationOverviewDirective.prototype.getDevices = function(scope, site) {
      return site.loadEquipments(null, null, (function(_this) {
        return function(err, equipments) {
          equipments = _.filter(equipments, function(equip) {
            return equip.model.equipment.charAt(0) !== '_';
          });
          return site.model.allDeviceNumber = _this.addZero(equipments.length);
        };
      })(this));
    };

    StationOverviewDirective.prototype.addZero = function(num) {
      if (parseInt(num) < 10 && parseInt(num) > 0) {
        num = '0' + num;
      }
      return num;
    };

    StationOverviewDirective.prototype.resize = function(scope) {};

    StationOverviewDirective.prototype.dispose = function(scope) {
      return _.map(scope.equipSubscription, (function(_this) {
        return function(value, key) {
          return value != null ? value.dispose() : void 0;
        };
      })(this));
    };

    return StationOverviewDirective;

  })(base.BaseDirective);
  return exports = {
    StationOverviewDirective: StationOverviewDirective
  };
});
