// Generated by IcedCoffeeScript 108.0.13

/*
* File: panoramic-overview-directive
* User: David
* Date: 2019/12/23
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var PanoramicOverviewDirective, exports;
  PanoramicOverviewDirective = (function(_super) {
    __extends(PanoramicOverviewDirective, _super);

    function PanoramicOverviewDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.clickTime = __bind(this.clickTime, this);
      this.show = __bind(this.show, this);
      this.id = "panoramic-overview";
      PanoramicOverviewDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    PanoramicOverviewDirective.prototype.setScope = function() {};

    PanoramicOverviewDirective.prototype.setCSS = function() {
      return css;
    };

    PanoramicOverviewDirective.prototype.setTemplate = function() {
      return view;
    };

    PanoramicOverviewDirective.prototype.show = function(scope, element, attrs) {
      scope.focus = 3;
      if (scope.station.model.d3) {
        scope.scene = "/resource/upload/img/public/" + scope.station.model.d3;
      } else {
        scope.scene = "";
      }
      return this.clickTime(scope);
    };

    PanoramicOverviewDirective.prototype.clickTime = function(scope) {
      return scope.clickTime = (function(_this) {
        return function(i) {
          scope.focus = i;
          if (scope.focus === 1) {
            _this.commonService.publishEventBus("showDevice", {
              data: i
            });
          }
          if (scope.focus === 2) {
            _this.commonService.publishEventBus("rotate", {
              data: i
            });
          }
          if (scope.focus === 3) {
            return _this.commonService.publishEventBus("default", {
              data: i
            });
          }
        };
      })(this);
    };

    PanoramicOverviewDirective.prototype.resize = function(scope) {};

    PanoramicOverviewDirective.prototype.dispose = function(scope) {};

    return PanoramicOverviewDirective;

  })(base.BaseDirective);
  return exports = {
    PanoramicOverviewDirective: PanoramicOverviewDirective
  };
});
