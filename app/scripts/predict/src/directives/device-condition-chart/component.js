// Generated by IcedCoffeeScript 108.0.13

/*
* File: device-condition-chart-directive
* User: David
* Date: 2019/11/08
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment", "echarts"], function(base, css, view, _, moment, echarts) {
  var DeviceConditionChartDirective, exports;
  DeviceConditionChartDirective = (function(_super) {
    __extends(DeviceConditionChartDirective, _super);

    function DeviceConditionChartDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "device-condition-chart";
      DeviceConditionChartDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    DeviceConditionChartDirective.prototype.setScope = function() {};

    DeviceConditionChartDirective.prototype.setCSS = function() {
      return css;
    };

    DeviceConditionChartDirective.prototype.setTemplate = function() {
      return view;
    };

    DeviceConditionChartDirective.prototype.show = function(scope, element, attrs) {
      var drawChart, init;
      drawChart = (function(_this) {
        return function() {
          var option;
          option = {
            title: {
              textAlign: "center",
              text: scope.parameters.deviceCount,
              left: "49%",
              top: "43%",
              textStyle: {
                color: "#ffffff",
                fontWeight: 400,
                fontSize: 24,
                fontFamily: "PingFangSC-Regular"
              },
              subtext: "总设备数",
              subtextStyle: {
                color: "#ffffff",
                fontWeight: 400,
                fontSize: 14,
                fontFamily: "PingFangSC-Regular"
              }
            },
            label: {
              formatter: "{b|{b}}\n{c|{c}}",
              rich: {
                b: {
                  fontSize: 14,
                  lineHeight: 30
                },
                c: {
                  fontSize: 24,
                  align: "right"
                }
              }
            },
            series: [
              {
                type: 'pie',
                center: ["50%", "50%"],
                radius: ["40%", "70%"],
                data: [
                  {
                    name: "健康运行设备数",
                    value: scope.parameters.healthCount,
                    itemStyle: {
                      color: "#55BDFF"
                    }
                  }, {
                    name: "出现故障设备数量",
                    value: scope.parameters.alarmCount,
                    itemStyle: {
                      color: "#7EDDD9"
                    }
                  }
                ]
              }
            ]
          };
          return scope.myChart.setOption(option);
        };
      })(this);
      init = (function(_this) {
        return function() {
          scope.myChart = echarts.init(element.find(".device-condition-chart")[0]);
          return scope.$watch("parameters", function(params) {
            return drawChart();
          });
        };
      })(this);
      return init();
    };

    DeviceConditionChartDirective.prototype.resize = function(scope) {
      return scope.myChart.resize();
    };

    DeviceConditionChartDirective.prototype.dispose = function(scope) {
      var _ref;
      return (_ref = scope.subAlarmInfo) != null ? _ref.dispose() : void 0;
    };

    return DeviceConditionChartDirective;

  })(base.BaseDirective);
  return exports = {
    DeviceConditionChartDirective: DeviceConditionChartDirective
  };
});
