// Generated by IcedCoffeeScript 108.0.13

/*
* File: station-switch-directive
* User: David
* Date: 2020/02/18
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var StationSwitchDirective, exports;
  StationSwitchDirective = (function(_super) {
    __extends(StationSwitchDirective, _super);

    function StationSwitchDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "station-switch";
      StationSwitchDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    StationSwitchDirective.prototype.setScope = function() {};

    StationSwitchDirective.prototype.setCSS = function() {
      return css;
    };

    StationSwitchDirective.prototype.setTemplate = function() {
      return view;
    };

    StationSwitchDirective.prototype.show = function(scope, element, attrs) {
      scope.stations = scope.project.stations.nitems;
      scope.clickStation = (function(_this) {
        return function(sta) {
          console.log(_this.$routeParams);
          return window.location.hash = "#/station-info/" + scope.project.model.user + "/" + scope.project.model.project + "/" + sta.model.station;
        };
      })(this);
      return scope.filterStation = function() {
        return (function(_this) {
          return function(station) {
            if (station.model.parent) {
              return true;
            } else {
              return false;
            }
          };
        })(this);
      };
    };

    StationSwitchDirective.prototype.resize = function(scope) {};

    StationSwitchDirective.prototype.dispose = function(scope) {};

    return StationSwitchDirective;

  })(base.BaseDirective);
  return exports = {
    StationSwitchDirective: StationSwitchDirective
  };
});
