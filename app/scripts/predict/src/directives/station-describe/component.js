// Generated by IcedCoffeeScript 108.0.13

/*
* File: station-describe-directive
* User: David
* Date: 2020/02/12
* Desc:
 */
if (typeof define !== 'function') { var define = require('amdefine')(module) };
var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

define(['../base-directive', 'text!./style.css', 'text!./view.html', 'underscore', "moment"], function(base, css, view, _, moment) {
  var StationDescribeDirective, exports;
  StationDescribeDirective = (function(_super) {
    __extends(StationDescribeDirective, _super);

    function StationDescribeDirective($timeout, $window, $compile, $routeParams, commonService) {
      this.show = __bind(this.show, this);
      this.id = "station-describe";
      StationDescribeDirective.__super__.constructor.call(this, $timeout, $window, $compile, $routeParams, commonService);
    }

    StationDescribeDirective.prototype.setScope = function() {};

    StationDescribeDirective.prototype.setCSS = function() {
      return css;
    };

    StationDescribeDirective.prototype.setTemplate = function() {
      return view;
    };

    StationDescribeDirective.prototype.show = function(scope, element, attrs) {
      var _ref;
      if ((_ref = scope.stationEventBus) != null) {
        _ref.dispose();
      }
      return scope.stationEventBus = this.commonService.subscribeEventBus('stationID', (function(_this) {
        return function(msg) {
          var stationID;
          stationID = msg.message.data;
          return _this.commonService.loadStation(stationID, function(err, station) {
            return scope.station = station;
          });
        };
      })(this));
    };

    StationDescribeDirective.prototype.resize = function(scope) {};

    StationDescribeDirective.prototype.dispose = function(scope) {
      var _ref;
      return (_ref = scope.stationEventBus) != null ? _ref.dispose() : void 0;
    };

    return StationDescribeDirective;

  })(base.BaseDirective);
  return exports = {
    StationDescribeDirective: StationDescribeDirective
  };
});
